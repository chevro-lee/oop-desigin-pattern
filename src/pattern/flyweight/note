特点：
享元模式可以避免大量非常相似的类创建开销。有时需要生产大量细粒度的类实例表示数据。如果这些类实例只有几个参数不相同，其他
参数都是相同的，这时就可以考虑使用享元模式了。
通过创建的工厂类FlyweightFactory中初始化的类对象构造相同的共享的类实例，将不同部分剥离出去，通过参数传递给相同的部分
以此来达到节省对象开销

通过example2的实例就能看出，如果通常设计，每个用户需求搭建网站，照客户端的代码例子来说，不用享元模式就需要为小菜，大鸟
娇娇，戴笠建四个网站。然而小菜和大鸟，娇娇和戴笠其实是同一种类型的网站。这是就可以将网站这个相同的部分抽象成共享的实例。
用户这种不同的部分抽象成不公享的部分，再通过参数传递给共享的部分。
可以看到example2客户端代码Client类，虽然是有四个网站，其实只创建了两个不通的网站实例。